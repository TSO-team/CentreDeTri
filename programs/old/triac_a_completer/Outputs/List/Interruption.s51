///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            01/Nov/2020  16:24:53 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  C:\working\Programme fourni\Sources\Interruption. /
//                          c                                                 /
//    Command line       =  "C:\working\Programme fourni\Sources\Interruption /
//                          .c" -lb "C:\working\Programme                     /
//                          fourni\Projet\..\Outputs\List\" -o                /
//                          "C:\working\Programme fourni\Projet\..\Outputs\Ob /
//                          j\" -e --no_cse --no_unroll --no_inline           /
//                          --no_code_motion --no_tbaa --debug --core=plain   /
//                          --dptr=16,1 --data_model=large --code_model=near  /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data --nr_virtual_regs 8        /
//                          --dlib_config "C:\Program Files (x86)\IAR         /
//                          Systems\Embedded Workbench                        /
//                          6.4\8051\LIB\DLIB\dl8051Normal.h" -I              /
//                          "C:\working\Programme fourni\Projet\..\Includes\" /
//                           -Ol --eec++                                      /
//    List file          =  C:\working\Programme fourni\Projet\..\Outputs\Lis /
//                          t\Interruption.s51                                /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Interruption

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?INTERRUPT_ENTER_XSP
        EXTERN ?INTERRUPT_LEAVE_XSP
        EXTERN ?US_DIV_MOD
        EXTERN ?V0
        EXTERN __INIT_XDATA_Z

        PUBLIC ??T0_int
        PUBWEAK `??T0_int??INTVEC 11`
        PUBLIC ??T1_int
        PUBWEAK `??T1_int??INTVEC 27`
        PUBLIC ??vInitInterruptOverflowT0
        PUBLIC ??vInitInterruptOverflowT1
        PUBLIC ??vInitTimer0
        PUBLIC ??vInitTimer1
        PUBWEAK TH0
        PUBWEAK TH1
        PUBWEAK TL0
        PUBWEAK TL1
        PUBWEAK _A_IE
        PUBWEAK _A_TCON
        PUBWEAK _A_TMOD
        PUBLIC uTimingFlags
        PUBLIC ucTriacDelay


`??T0_int??INTVEC 11` SYMBOL "??INTVEC 11", ??T0_int

`??T1_int??INTVEC 27` SYMBOL "??INTVEC 27", ??T1_int


        ASEGN SFR_AN:DATA:NOROOT,08cH
// unsigned char volatile __sfr TH0
TH0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,088H
// union <unnamed> volatile __sfr _A_TCON
_A_TCON:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IE
_A_IE:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08dH
// unsigned char volatile __sfr TH1
TH1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,089H
// union <unnamed> volatile __sfr _A_TMOD
_A_TMOD:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08aH
// unsigned char volatile __sfr TL0
TL0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08bH
// unsigned char volatile __sfr TL1
TL1:
        DATA8
        DS 1

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
uTimingFlags:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucTriacDelay:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG NEAR_CODE:CODE:NOROOT(0)
??vInitTimer0:
        CODE
        ; Saved register size: 0
        ; Auto size: 0
        ORL     0x89,#0x1
        MOV     0x8c,#0x0
        MOV     0x8a,#0x0
        SETB    0x88.4
        RET
        REQUIRE _A_TMOD
        REQUIRE TH0
        REQUIRE TL0
        REQUIRE _A_TCON

        RSEG NEAR_CODE:CODE:NOROOT(0)
??vInitInterruptOverflowT0:
        CODE
        ; Saved register size: 0
        ; Auto size: 0
        SETB    0xa8.1
        RET
        REQUIRE _A_IE

        RSEG NEAR_CODE:CODE:NOROOT(0)
??vInitTimer1:
        CODE
        ; Saved register size: 0
        ; Auto size: 0
        ORL     0x89,#0x20
        MOV     0x8d,#-0x5d
        MOV     0x8b,#-0x5d
        SETB    0x88.6
        RET
        REQUIRE _A_TMOD
        REQUIRE TH1
        REQUIRE TL1
        REQUIRE _A_TCON

        RSEG NEAR_CODE:CODE:NOROOT(0)
??vInitInterruptOverflowT1:
        CODE
        ; Saved register size: 0
        ; Auto size: 0
        SETB    0xa8.3
        RET
        REQUIRE _A_IE

        RSEG NEAR_CODE:CODE:NOROOT(0)
??T0_int:
        CODE
        PUSH    A
        MOV     A,#-0xf
        LCALL   ?INTERRUPT_ENTER_XSP
        ; Saved register size: 15
        ; Auto size: 0
        CLR     0xa8.7
        CLR     0x88.4
        CLR     0x88.5
        MOV     0x8c,#-0x4
        MOV     0x8a,#0x66
        MOV     DPTR,#??uiCounter
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
        MOV     DPTR,#uTimingFlags
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.0
        MOVX    @DPTR,A
        MOV     DPTR,#??uiCounter
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??T0_int_1
        MOV     DPTR,#uTimingFlags
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.1
        MOVX    @DPTR,A
??T0_int_1:
        MOV     DPTR,#??uiCounter
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R2,#0x64
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??T0_int_2
        MOV     DPTR,#uTimingFlags
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.2
        MOVX    @DPTR,A
        MOV     DPTR,#??uiCounter
        MOV     A,#0x0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x0
        MOVX    @DPTR,A
??T0_int_2:
        SETB    0xa8.7
        SETB    0x88.4
        MOV     R7,#0x2
        LJMP    ?INTERRUPT_LEAVE_XSP
        REQUIRE _A_IE
        REQUIRE _A_TCON
        REQUIRE TH0
        REQUIRE TL0

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
??uiCounter:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG NEAR_CODE:CODE:NOROOT(0)
??T1_int:
        CODE
        PUSH    A
        PUSH    PSW
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 4
        ; Auto size: 0
        CLR     0x88.6
        CLR     0x88.7
        MOV     DPTR,#ucTriacDelay
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        SETB    0x88.6
        POP     DPH
        POP     DPL
        POP     PSW
        POP     A
        RETI
        REQUIRE _A_TCON

        COMMON INTVEC:CODE:ROOT(0)
        ORG 11
`??T0_int??INTVEC 11`:
        LJMP       (??T0_int)

        COMMON INTVEC:CODE:ROOT(0)
        ORG 27
`??T1_int??INTVEC 27`:
        LJMP       (??T1_int)

        END
// 
//   6 bytes in segment INTVEC
// 181 bytes in segment NEAR_CODE
//   7 bytes in segment SFR_AN
//   4 bytes in segment XDATA_Z
// 
// 181 bytes of CODE  memory (+ 6 bytes shared)
//   0 bytes of DATA  memory (+ 7 bytes shared)
//   4 bytes of XDATA memory
//
//Errors: none
//Warnings: none
